//
// student.c
//

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "student.h"
#include "encrypt.h"


const char* STUFILE = "studentdata.txt";

// keeps track of the number of students in the students array
int numStudents = 0;

// holds the student pointer array
Student* students[100] = {0};


void createStudent(char* fname, char* lname, int age, int id)
{
  // createStudent dynamically creates a Student on the heap and adds that
  // student to the student array
  //  - the firstName and lastName strings should be dynamically created
  //    based on the size of the fname and lname args
  struct Student *new_student = (Student* )malloc(sizeof(Student));

  new_student->firstName = (char*)malloc(sizeof(&fname));
  new_student->lastName = (char*)malloc(sizeof(&lname));

  strcpy(new_student->firstName, fname);
  strcpy(new_student->lastName, lname); 

  new_student->age = age;
  new_student->id = id;

  for (int i = 0; i < 100; i++)
  {
    if(students[i] == NULL)
    {
      Student[i] = new_student;
      break;
    }
    
  }
  numStudents++;  


}


void deleteStudent(Student* student)
{
  // free the memory associated with a student including the strings
free(str->fname);
free(str->lname);
free(student);
}


void deleteStudents()
{
  // iterate over the students array deleting every student and setting the pointer
  // values to 0 and adjusting the numStudents to 0
for(i = 0;i < 100;i++)
{
  deleteStudent(students[i]);
  students[i] = 0;
}
numStudents = 0;
}


void saveStudents(int key)
{
  // save all students in the student array to a file 'studentdata.txt' overwriting
  // any existing file
  //   - the format of the file is one line per student as follows fname lname age id:
  //       tom thumb 15 1234 
  //       james dean 21 2345 
  //       katy jones 18 4532
fp = fopen("w");
char buff[256];

for(i = 0;i < 100;i++)
{
  student* student = students[i];
  sprintf(buff, "%s %s %d %ld", st->fname, st->lname, st->age, st->id);
}

if (key != 0)
{
  caesarencrypt(buff, key);
}

fprintf(fp, %s\n, buff);
fclose(fp);

void loadStudents(int key)
{

char b1[256];
char b2[256];
char b3[256];
char b4[256];

  // load the students from the data file overwriting all exisiting students in memory
if (numStudents > 0)
{
  deleteStudents();
}

//open file

if(fp)
{
  if (match ==4)
  { 
    int match = (fscanf(fp, "%s %s %s %s", b1, b2, b3, b4);

    if (key != 0)
    {
      caesarDecrypt(b1, key);
      caesarDecrypt(b2, key);
      caesarDecrypt(b3, key);
      caesarDecrypt(b4, key);
    }
  }
}


void printStudent(Student* student)
{
  printf("  Student: %s %s\n", student->firstName, student->lastName);
  printf("    age: %d\n", student->age);
  printf("    id: %ld\n", student->id); 
}


void printStudents()
{
  for (int i = 0; i < numStudents; i++) {
    printf("\n----- student %d ------\n", i);
    printStudent(students[i]);
  }
}




